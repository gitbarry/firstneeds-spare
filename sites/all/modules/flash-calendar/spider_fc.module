<?php
/**
 * @file
 * Spider FC module for Drupal 7.
 *
 * Written by Webdorado team.
 */

/**
 * Implements hook_help().
 */
function spider_fc_help($path, $arg) {
  switch ($path) {
    case "admin/help#spider_fc":
      $output = '';
      $output .= '<h3>' . t("Spider FC module help.") . '</h3>';
      $output .= t("Download 'jscolor' library form !url_jscolor and extract it to 'sites/all/libraries/jscolor' directory.<br /><br />
                      To show HTML editor in <strong>Administer > Spider FC > Calendars > Manage event > HTML</strong> field download 'tinymce' library from
                      !url_html_tiny and extract it to 'sites/all/libraries/tinymce' directory.<br /><br />
                      Go to !url_create_cal to create calendars, events and themes for calendars.<br /><br />
                      To show created calendars go to !url_create_content. Select calendar and save content.<br />
                      To add more than one calendar and three events, go to Spider FC module page on !full.", array(
                        '!url_jscolor' => l(t('http://jscolor.com/release/jscolor-1.4.0.zip'), 'http://jscolor.com/release/jscolor-1.4.0.zip'),
                        '!url_html_tiny' => l(t('http://github.com/downloads/tinymce/tinymce/tinymce_3.5.7.zip'), 'http://github.com/downloads/tinymce/tinymce/tinymce_3.5.7.zip'),
                        '!url_create_cal' => l(t('Administer > Spider FC'), url('admin/settings/spider_fc', array('absolute' => TRUE))),
                        '!url_create_content' => l(t('Add content > Spider FC'), url('node/add/spider-fc', array('absolute' => TRUE))),
                        '!full' => l(t('drupal.org'), 'http://drupal.org/project/flash-calendar'),
                        ));
      return $output;
  }
}

/**
 * Implements hook_permission().
 */
function spider_fc_permission() {
  return array(
    'access Spider FC administration' => array(
      'title' => t('Administer Spider FC module.'),
    ),
  );
}

/**
 * Implements hook_menu().
 */
function spider_fc_menu() {
  $items = array();
  $items['admin/settings/spider_fc'] = array(
    'title' => 'Spider FC',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('spider_fc_calendars'),
    'access arguments' => array('access Spider FC administration'),
    'type' => MENU_NORMAL_ITEM,
    'file' => 'includes/spider_fc_calendars.inc',
  );
  $items['admin/settings/spider_fc/calendar'] = array(
    'title' => 'Calendars',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('spider_fc_calendars'),
    'access arguments' => array('access Spider FC administration'),
    'context' => MENU_CONTEXT_PAGE | MENU_CONTEXT_INLINE,
    'type' => MENU_DEFAULT_LOCAL_TASK,
    'file' => 'includes/spider_fc_calendars.inc',
  );
  $items['admin/settings/spider_fc/calendar/new'] = array(
    'page callback' => 'drupal_get_form',
    'page arguments' => array('spider_fc_add_calendar'),
    'access arguments' => array('access Spider FC administration'),
    'type' => MENU_CALLBACK,
    'file' => 'includes/spider_fc_calendars.inc',
  );
  $items['admin/settings/spider_fc/calendar/edit'] = array(
    'page callback' => 'drupal_get_form',
    'page arguments' => array('spider_fc_edit_calendar'),
    'access arguments' => array('access Spider FC administration'),
    'type' => MENU_CALLBACK,
    'file' => 'includes/spider_fc_calendars.inc',
  );
  $items['admin/settings/spider_fc/delete'] = array(
    'page callback' => 'drupal_get_form',
    'page arguments' => array('spider_fc_delete_calendar'),
    'access arguments' => array('access Spider FC administration'),
    'type' => MENU_CALLBACK,
    'file' => 'includes/spider_fc_calendars.inc',
  );
  $items['admin/settings/spider_fc/publish'] = array(
    'page callback' => 'drupal_get_form',
    'page arguments' => array('spider_fc_publish_calendar'),
    'access arguments' => array('access Spider FC administration'),
    'type' => MENU_CALLBACK,
    'file' => 'includes/spider_fc_calendars.inc',
  );
  $items['admin/settings/spider_fc/unpublish'] = array(
    'page callback' => 'drupal_get_form',
    'page arguments' => array('spider_fc_unpublish_calendar'),
    'access arguments' => array('access Spider FC administration'),
    'type' => MENU_CALLBACK,
    'file' => 'includes/spider_fc_calendars.inc',
  );
  $items['spider_fc/params_xml'] = array(
    'page callback' => 'spider_fc_params_xml',
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
    'file' => 'includes/spider_fc_params_xml.inc',
  );
  $items['spider_fc/calendar_xml'] = array(
    'page callback' => 'spider_fc_calendar_xml',
    'access callback' => TRUE,
    'file' => 'includes/spider_fc_calendar_xml.inc',
  );
  $items['spider_fc/lang_xml'] = array(
    'page callback' => 'spider_fc_lang_xml',
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
    'file' => 'includes/spider_fc_lang_xml.inc',
  );
  $items['admin/settings/spider_fc/calendar/manage_events'] = array(
    'title' => '',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('spider_fc_manage_events'),
    'access arguments' => array('access Spider FC administration'),
    'type' => MENU_CALLBACK,
    'file' => 'includes/spider_fc_manage_events.inc',
  );
  $items['admin/settings/spider_fc/calendar/manage_events/new'] = array(
    'page callback' => 'drupal_get_form',
    'page arguments' => array('spider_fc_manage_events_new'),
    'access arguments' => array('access Spider FC administration'),
    'type' => MENU_CALLBACK,
    'file' => 'includes/spider_fc_manage_events.inc',
  );
  $items['admin/settings/spider_fc/calendar/manage_events/delete'] = array(
    'page callback' => 'drupal_get_form',
    'page arguments' => array('spider_fc_manage_events_delete'),
    'access arguments' => array('access Spider FC administration'),
    'type' => MENU_CALLBACK,
    'file' => 'includes/spider_fc_manage_events.inc',
  );
  $items['admin/settings/spider_fc/calendar/manage_events/publish'] = array(
    'page callback' => 'drupal_get_form',
    'page arguments' => array('spider_fc_manage_events_publish'),
    'access arguments' => array('access Spider FC administration'),
    'type' => MENU_CALLBACK,
    'file' => 'includes/spider_fc_manage_events.inc',
  );
  $items['admin/settings/spider_fc/calendar/manage_events/unpublish'] = array(
    'page callback' => 'drupal_get_form',
    'page arguments' => array('spider_fc_manage_events_unpublish'),
    'access arguments' => array('access Spider FC administration'),
    'type' => MENU_CALLBACK,
    'file' => 'includes/spider_fc_manage_events.inc',
  );
  $items['admin/settings/spider_fc/themes'] = array(
    'title' => 'Themes',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('spider_fc_calendar_theme'),
    'access arguments' => array('access Spider FC administration'),
    'context' => MENU_CONTEXT_PAGE | MENU_CONTEXT_INLINE,
    'type' => MENU_LOCAL_TASK,
    'file' => 'includes/spider_fc_calendar_theme.inc',
  );
  $items['admin/settings/spider_fc/themes/new'] = array(
    'page callback' => 'drupal_get_form',
    'page arguments' => array('spider_fc_add_theme'),
    'access arguments' => array('access Spider FC administration'),
    'type' => MENU_CALLBACK,
    'file' => 'includes/spider_fc_calendar_theme.inc',
  );
  $items['admin/settings/spider_fc/themes/delete'] = array(
    'page callback' => 'drupal_get_form',
    'page arguments' => array('spider_fc_delete_theme'),
    'access arguments' => array('access Spider FC administration'),
    'type' => MENU_CALLBACK,
    'file' => 'includes/spider_fc_calendar_theme.inc',
  );
  return $items;
}

/**
 * Function spider_fc_variable_get().
 */
function spider_fc_variable_get($variable) {
  switch ($variable) {
    case 'spider_fc_allowed_tags':
      $result = variable_get('spider_fc_allowed_tags', array(
        'a',
        'em',
        'strong',
        'code',
        'img',
      ));
      break;

    case 'spider_fc_node_types':
      $result = variable_get('spider_fc_node_types', array('spider_fc'));
      break;

    case 'spider_fc_node_types_primary':
      $result = variable_get('spider_fc_node_types_primary', array('spider_fc'));
      break;
  }
  return $result;
}

/**
 * Implements hook_node_info().
 */
function spider_fc_node_info() {
  return array(
    'spider_fc' => array(
      'name' => t('Spider FC'),
      'base' => 'spider_fc',
      'module' => 'spider_fc',
      'description' => t("Create a new calendar with Spider FC module"),
    )
  );
}

/**
 * Implements hook_form().
 */
function spider_fc_form(&$node, &$form_state) {
  $form = array();
  $form['title'] = array(
    '#type' => 'textfield',
    '#title' => t('Title'),
    '#required' => TRUE,
    '#default_value' => $node->title,
  );
  if (isset($node->nid)) {
    $cal_row = db_query("SELECT * FROM {spider_fc_form_table} WHERE  vid=:vid", array(':vid' => $node->nid))->fetchObject();
    $default_value = $cal_row->calendar;
    $default_theme_value = $cal_row->theme;
  }
  else {
    $default_value = 0;
    $default_theme_value = 1;
  }
  $calendars = spider_fc_get_calendars_array();
  $themes = db_query("SELECT id,title FROM {spider_fc_theme_table} ORDER BY title")->fetchAllKeyed();
  $form['select_calendars'] = array(
    '#type' => 'select',
    '#title' => t('Select calendar'),
    '#description' => t('Create calendars on !url.', array('!url' => l('admin/settings/spider_fc', url('admin/settings/spider_fc', array('absolute' => TRUE))))),
    '#default_value' => $default_value,
    '#required' => FALSE,
    '#options' => $calendars,
  );
  $form['select_themes'] = array(
    '#type' => 'select',
    '#title' => t('Select theme'),
    '#description' => t('Select the calendar theme.'),
    '#default_value' => $default_theme_value,
    '#required' => FALSE,
    '#options' => $themes,
  );
  return system_settings_form($form);
}

/**
 * Implements hook_node_insert().
 */
function spider_fc_node_insert($node) {
  if ($node->type == 'spider_fc') {
    $type = 'spider_fc';
    $title = '';
    $title = $node->select_calendars;
    $theme = $node->select_themes;
    db_insert('spider_fc_form_table')->fields(array(
      'vid' => $node->nid,
      'type' => $type,
      'calendar' => $title,
      'theme' => $theme,
    ))->execute();
    db_query("UPDATE {node_revision} SET comment=:comment WHERE nid=:nid", array(':comment' => 0, ':nid' => $node->nid));
  }
}

/**
 * Implements hook_node_update().
 */
function spider_fc_node_update($node) {
  if ($node->type == 'spider_fc') {
    $title = '';
    $title = $node->select_calendars;
    $theme = $node->select_themes;
    db_query("UPDATE {spider_fc_form_table} SET calendar=:calendar, theme=:theme WHERE vid=:vid", array(':calendar' => $title, ':theme' => $theme, ':vid' => $node->nid));
  }
}

/**
 * Implements hook_node_delete().
 */
function spider_fc_node_delete($node) {
  db_query("DELETE FROM {spider_fc_form_table} WHERE vid=:vid", array(':vid' => $node->nid));
  db_query("DELETE FROM {node} WHERE nid=:nid", array(':nid' => $node->nid));
}

/**
 * Implements hook_node_view().
 */
function spider_fc_node_view($node, $view_mode) {
  if (!in_array($node->type, spider_fc_variable_get('spider_fc_node_types'))) {
    return;
  }
  $teaser = $view_mode == 'teaser';
  $page = arg(0) == 'node' && arg(1) == $node->nid;
  if (($teaser) || empty($node->uid)) {
    return;
  }
  $select_calendars = db_query("SELECT calendar FROM {spider_fc_form_table} WHERE vid=:vid", array(':vid' => $node->nid))->fetchField();
  if ($select_calendars == -1 || $select_calendars == 0 || !db_query("SELECT id FROM {spider_fc_calendar_table} WHERE published=1 and id=:id", array(':id' => $select_calendars))->fetchField()) {
    $error_message = t('The calendar is not chosen. Select calendar !url.', array('!url' => l('here', url('node/' . $node->nid . '/edit', array('absolute' => TRUE)))));
    drupal_set_message($error_message, 'error', FALSE);
    $node_view = '';
  }
  else {
    require_once "includes/spider_fc_view.inc";
    $cal_theme = db_query("SELECT theme FROM {spider_fc_form_table} WHERE vid=:vid", array(':vid' => $node->nid))->fetchField();
    $node_view = spider_fc_content_view($select_calendars, $cal_theme, $node->nid);
  }
  unset($node->content['comments']);
  
  $node->content['spider_fc'] = array(
    '#node' => $node,
    '#teaser' => $teaser,
    '#page' => $page,
    '#markup' => $node_view,
    '#enabled' => TRUE,
    '#weight' => 10,
  );
}

/**
 * Function spider_fc_get_calendars_array().
 */
function spider_fc_get_calendars_array() {
  $calendar = array();
  $calendar = db_query("SELECT id,title FROM {spider_fc_calendar_table} WHERE published=1 ORDER BY title")->fetchAllKeyed();
  $calendar[0] = t('-Select calendar-');
  return $calendar;
}

/**
 * Implements hook_library().
 */
function spider_fc_library() {
  $libraries = array(
    'jscolor' => array(
      'version' => '1.3.9',
      'js' => array('sites/all/libraries/jscolor/jscolor.js' => array(
        'group' => JS_LIBRARY,
        ),
      ),
    ),
    'tinymce' => array(
      'version' => '3.5.7',
      'js' => array('sites/all/libraries/tinymce/jscripts/tiny_mce/tiny_mce.js' => array(
        'group' => JS_LIBRARY,
        ),
      ),
    ),
  );
  return $libraries;
}

/**
 * Implements hook_init().
 */
function spider_fc_init() {
  drupal_add_css(drupal_get_path('module', 'spider_fc') . '/css/spider_fc_fieldset.css');
}
